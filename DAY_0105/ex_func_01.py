# 함수 호출(calling)
#
# 함수 - 전자렌지 비유?
#
# def 전자렌지(닭가슴살, 호빵):
#     메뉴1 : 데우기
#     메뉴2 : 1분 30초
#     메뉴3 : 시작
#     return 데워진 닭가슴살, 데워진 호빵
#
# def abs(num):          # 여기서 num은 매개변수, parameters
#     result = 1
#     if num>0:
#         result = num
#     elif num ≤0:
#         result = num * -1
#
# abs(-7)               # - 여기서 -7은 인자, argument
#
# - 값 저장 변수
# - 주소 저장 변수 : 참조변수, 레퍼런스 변수
# - 함수코드에 전달된 Data 저장 변수 : 매개변수, parameters

# -----------------------------------------------------------------
# 함수 (function)
# - 특정 기능을 구현하기 위한 코드 묶음을 의미
# - 자주 사용되는 기능을 함수로 구현함
# def 함수이름(매개변수1, 매개변수2, ..., 매개변수):
# <-->실행코드
# <-->실행코드
#     return 리턴값      (동의어. 변환값, 결과값)
# -----------------------------------------------------------------
# 함수 기능 : 2개의 숫자의 합계를 계산 후 결과를 반환해주는 기능
# 함수 이름 : addTwo
# 매개 변수 : x , y
# 반 환 값 : 합계
# -----------------------------------------------------------------

def addTwo (x, y):       # 함수명이 합성어(?)인 경우 띄어쓰기를 대문자로 대체하여 구분하는 것이 관습
    value = x + y
    return value

# -----------------------------------------------------------------
# 함수 기능 : 2개의 숫자의 곱셈 결과를 반환해주는 기능
# 함수 이름 : multi
# 매개 변수 : x , y
# 반 환 값 : 곱셈결과
# -----------------------------------------------------------------

def multi (x, y):
    value = x * y         # 여러 함수에서 공통되게 value가 사용되어도 영향주지 않음
    return value

# -----------------------------------------------------------------
# 함수 사용 => 함수 호출(Calling)
# - 방법 : 함수이름(데이터, 데이터...)
# -----------------------------------------------------------------

print(addTwo(5, 10))
print(multi(5,10))
print(multi(5,'s'))

# 코딩 시 표기법 '명명법'
# - 대표적으로 "카멜(camelCase) / 파스칼(PasclaCase) / 스네이크(snake_case)
# - 카멜 표기법 : 변수명, 함수명
# - 파스칼 표기법 : 클래스 (가끔 함수)
# - 스네이크 표기법 : 변수명, 함수명, 데이터 타입,