# while문은 반복을 중단하는 것이 중요
# for문은 반복가능한 조건을 제공하면 파이썬 해석기가 원소를 순차적으로 반복하여 더 이상 동작할 원소가 없으면 해당 수행을 완료 함
# while문은 조건이 참이라면 해당 내용을 수행하고 초기값으로 갱신하여 반복하는 형식
# -----------------------------------------------------------------
# 반복문 - 2 while 반복문
# - 주로 반복의 횟수가 정해지지 않은 경우에 사용
# - 반복의 횟수가 정해진 경우에도 사용 가능함 (for문이 편해서 주로 for문 사용)
# -----------------------------------------------------------------
# [요청] 사용자로부터 좋아하는 음식명을 입력 받아주세요.
#       => input()
#       단, 사용자가 '종료'라는 음식명 입력 전까지 입력 받으세요
#       => 몇 번 입력받아야 입력이 끝날 지 알 수 없음
# -----------------------------------------------------------------
# [요청2] 사용자로부터 좋아하는 음식명을 입력 받아주세요.
#       => input()
#       단, TOP 5로 가장 좋아하는 음식 5개만 입력 받으세요.
#       => 5번 입력받아야 함
# -----------------------------------------------------------------
Test = False # 실습용 코드 제어 변수


if Test :
    foods = []
    for f in range(5):
        food = input("좋아하는 음식명을 적어주세요: ")
        foods.append(food)

    print(f'좋아하는 음식 {foods[0]}, {foods[1]}, {foods[2]}, {foods[3]}, {foods[4]}입니다.')

    # 항상 리스트에 담을 필요는 없다.

    print("당신은 ", end='')
    for food in foods:
        print(food, end="" if foods[-1] == food else ', ')
    print('을 좋아하는 군요!')

    strFoods= ""
    for cnt in range(5):
        food = input(f'{cnt+1}번째 좋아하는 음식명 입력: ')
        strFoods = strFoods + food + (', ' if cnt != 4 else '')
        print(f'좋아하는 음식 => {strFoods}')
    print(f'당신은 {strFoods}를 좋아하시는군요!')

    # 스트링에 담고 필요할 때 스플릿으로 분리하자


# -----------------------------------------------------------------
# 기본 while 문법
# while 조건식 :
# <--> 실행코드
# <--> 실행코드
# -----------------------------------------------------------------
# 타이머 프로그램 만들기 => 다운카운팅 : 10 9 8 7 ... 1
downCnt = 10
while downCnt>0:           #downCnt>=1 : 로도 가능
    print(f'다운 카운팅 : {downCnt}초')
    downCnt -= 1

# -----------------------------------------------------------------
# [요청] 사용자로부터 좋아하는 음식명을 입력 받아주세요.
#       => input()
#       단, 사용자가 '종료'라는 음식명 입력 전까지 입력 받으세요
#       => 몇 번 입력받아야 입력이 끝날 지 알 수 없음
# -----------------------------------------------------------------
# strFoods = ""
# while
#     food = input


# 타이머 프로그램 만들기 => 업카운팅 : 1 2 3 4 ...10

upCnt = 1
while upCnt<=10:
    print(f'업 카운팅 : {upCnt}초')
    upCnt += 1
# -----------------------------------------------------------------
# 동일한 문제를 for ~ in 반복문으로 구현
# -----------------------------------------------------------------

for downCnt in range(10,0,-1):
    print(f'다운 카운팅 : {downCnt}초')
print('땡!')

for upCnt in range(1,11):
    print(f'업 카운팅 : {upCnt}초')
print('땡!')